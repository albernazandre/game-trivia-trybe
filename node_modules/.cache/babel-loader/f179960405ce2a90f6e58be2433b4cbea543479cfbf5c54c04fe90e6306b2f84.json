{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trivia-react-redux/src/Pages/Game.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../Components/Header';\nimport { saveGame, logOut, scoreAction } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst magicNumberTimer = -1;\nconst rightAnswer = 'correct-answer';\nclass Game extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      answers: [],\n      btnNext: false,\n      isLoading: true,\n      isBtnDisabled: false,\n      timer: 30,\n      toRender: 0\n    };\n    this.fetchGame = async token => {\n      const secondFetch = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n      const response = await secondFetch.json();\n      return response;\n    };\n    this.checkTokenToMountGame = async () => {\n      const {\n        history,\n        dispatch\n      } = this.props;\n      const magicNumber = 3;\n      const localStorageToken = localStorage.getItem('token');\n      const fetchedGame = await this.fetchGame(localStorageToken);\n      if (fetchedGame.response_code === magicNumber) {\n        localStorage.removeItem('token');\n        dispatch(logOut());\n        history.push('/');\n      } else {\n        dispatch(saveGame(fetchedGame));\n      }\n      this.setState({\n        isLoading: false\n      }, () => this.answersToShow());\n    };\n    this.answersToShow = () => {\n      const {\n        toRender\n      } = this.state;\n      const {\n        game\n      } = this.props;\n      const rightOption = game[toRender].correct_answer;\n      const wrongAnswer = game[toRender].incorrect_answers;\n      const options = [rightOption, ...wrongAnswer];\n      for (let i = options.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [options[i], options[j]] = [options[j], options[i]];\n      }\n      this.setState({\n        answers: options\n      });\n    };\n    this.chronometer = () => {\n      const magicNumber = 1000;\n      this.timerId = setInterval(() => {\n        this.setState(prevState => ({\n          timer: prevState.timer - 1\n        }));\n      }, magicNumber);\n    };\n    this.colorTheAnswerBtn = _ref => {\n      let {\n        target\n      } = _ref;\n      clearInterval(this.timerId);\n      const correctBtn = document.querySelector(`.${rightAnswer}`);\n      const wrongBtn = document.querySelectorAll('.wrong-answer');\n      correctBtn.style.border = '3px solid rgb(6, 240, 15)';\n      wrongBtn.forEach(btn => {\n        btn.style.border = '3px solid red';\n      });\n      this.setState({\n        btnNext: true\n      });\n      if (target.className === rightAnswer) {\n        this.scoreCount();\n      }\n    };\n    this.handleNextClick = () => {\n      const {\n        history\n      } = this.props;\n      const {\n        toRender\n      } = this.state;\n      this.setState(prevState => ({\n        toRender: prevState.toRender + 1,\n        answers: [],\n        btnNext: false,\n        isLoading: true,\n        isBtnDisabled: false,\n        timer: 30\n      }), () => this.chronometer());\n      this.setState({\n        isLoading: false\n      });\n      const maxGameLength = 4;\n      if (toRender === maxGameLength) {\n        history.push('/feedback');\n      }\n    };\n    this.scoreCount = () => {\n      const {\n        game,\n        dispatch\n      } = this.props;\n      const {\n        timer,\n        toRender\n      } = this.state;\n      const hard = 3;\n      const firstPoints = 10;\n      let difficulty = 0;\n      switch (game[toRender].difficulty) {\n        case 'easy':\n          difficulty = 1;\n          break;\n        case 'medium':\n          difficulty = 2;\n          break;\n        case 'hard':\n          difficulty = hard;\n          break;\n        default:\n          break;\n      }\n      const points = firstPoints + timer * difficulty;\n      dispatch(scoreAction(points));\n    };\n  }\n  componentDidMount() {\n    this.checkTokenToMountGame();\n    this.chronometer();\n  }\n  componentDidUpdate(_, prevState) {\n    const {\n      game\n    } = this.props;\n    const {\n      toRender,\n      timer\n    } = this.state;\n    if (game.length && prevState.toRender !== toRender) {\n      this.answersToShow();\n    }\n    if (timer === 0) {\n      clearInterval(this.timerId);\n      this.setState({\n        btnNext: true,\n        isBtnDisabled: true,\n        timer: -1\n      });\n    }\n  }\n  render() {\n    const {\n      game\n      /*       score, */\n    } = this.props;\n    const {\n      answers,\n      btnNext,\n      isBtnDisabled,\n      isLoading,\n      timer,\n      toRender\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"question-category\",\n          children: game[toRender].category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"question-text\",\n          children: game[toRender].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"answer-options\",\n          children: answers.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: isBtnDisabled,\n            onClick: this.colorTheAnswerBtn,\n            className: `${game[toRender].correct_answer === option ? rightAnswer : 'wrong-answer'}`,\n            type: \"button\",\n            \"data-testid\": game[toRender].correct_answer === option ? rightAnswer : `wrong-answer-${index}`,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), btnNext ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"btn-next\",\n          onClick: this.handleNextClick,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: timer === magicNumberTimer ? 0 : timer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  }\n}\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  game: PropTypes.instanceOf(Array).isRequired\n  // score: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  game: state.game.results,\n  email: state.player.gravatarEmail,\n  score: state.player.score\n});\nexport default connect(mapStateToProps)(Game);","map":{"version":3,"names":["React","Component","connect","PropTypes","Header","saveGame","logOut","scoreAction","magicNumberTimer","rightAnswer","Game","state","answers","btnNext","isLoading","isBtnDisabled","timer","toRender","fetchGame","token","secondFetch","fetch","response","json","checkTokenToMountGame","history","dispatch","props","magicNumber","localStorageToken","localStorage","getItem","fetchedGame","response_code","removeItem","push","setState","answersToShow","game","rightOption","correct_answer","wrongAnswer","incorrect_answers","options","i","length","j","Math","floor","random","chronometer","timerId","setInterval","prevState","colorTheAnswerBtn","target","clearInterval","correctBtn","document","querySelector","wrongBtn","querySelectorAll","style","border","forEach","btn","className","scoreCount","handleNextClick","maxGameLength","hard","firstPoints","difficulty","points","componentDidMount","componentDidUpdate","_","render","category","question","map","option","index","propTypes","shape","func","isRequired","instanceOf","Array","mapStateToProps","results","email","player","gravatarEmail","score"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trivia-react-redux/src/Pages/Game.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../Components/Header';\nimport { saveGame, logOut, scoreAction } from '../redux/actions';\n\nconst magicNumberTimer = -1;\nconst rightAnswer = 'correct-answer';\n\nclass Game extends Component {\n  state = {\n    answers: [],\n    btnNext: false,\n    isLoading: true,\n    isBtnDisabled: false,\n    timer: 30,\n    toRender: 0,\n  };\n\n  componentDidMount() {\n    this.checkTokenToMountGame();\n    this.chronometer();\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { game } = this.props;\n    const { toRender, timer } = this.state;\n    if (game.length && (prevState.toRender !== toRender)) {\n      this.answersToShow();\n    }\n    if (timer === 0) {\n      clearInterval(this.timerId);\n      this.setState({\n        btnNext: true,\n        isBtnDisabled: true,\n        timer: -1,\n      });\n    }\n  }\n\n  fetchGame = async (token) => {\n    const secondFetch = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const response = await secondFetch.json();\n    return response;\n  };\n\n  checkTokenToMountGame = async () => {\n    const { history, dispatch } = this.props;\n    const magicNumber = 3;\n    const localStorageToken = localStorage.getItem('token');\n    const fetchedGame = await this.fetchGame(localStorageToken);\n    if (fetchedGame.response_code === magicNumber) {\n      localStorage.removeItem('token');\n      dispatch(logOut());\n      history.push('/');\n    } else {\n      dispatch(saveGame(fetchedGame));\n    }\n    this.setState({ isLoading: false }, () => this.answersToShow());\n  };\n\n  answersToShow = () => {\n    const { toRender } = this.state;\n    const { game } = this.props;\n    const rightOption = game[toRender].correct_answer;\n    const wrongAnswer = game[toRender].incorrect_answers;\n    const options = [rightOption, ...wrongAnswer];\n    for (let i = options.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [options[i], options[j]] = [options[j], options[i]];\n    }\n    this.setState({\n      answers: options,\n    });\n  };\n\n  chronometer = () => {\n    const magicNumber = 1000;\n    this.timerId = setInterval(() => {\n      this.setState((prevState) => ({\n        timer: prevState.timer - 1,\n      }));\n    }, magicNumber);\n  };\n\n  colorTheAnswerBtn = ({ target }) => {\n    clearInterval(this.timerId);\n    const correctBtn = document.querySelector(`.${rightAnswer}`);\n    const wrongBtn = document.querySelectorAll('.wrong-answer');\n    correctBtn.style.border = '3px solid rgb(6, 240, 15)';\n    wrongBtn.forEach((btn) => {\n      btn.style.border = '3px solid red';\n    });\n    this.setState({\n      btnNext: true,\n    });\n    if (target.className === rightAnswer) {\n      this.scoreCount();\n    }\n  };\n\n  handleNextClick = () => {\n    const { history } = this.props;\n    const { toRender } = this.state;\n    this.setState((prevState) => ({\n      toRender: prevState.toRender + 1,\n      answers: [],\n      btnNext: false,\n      isLoading: true,\n      isBtnDisabled: false,\n      timer: 30,\n    }), () => this.chronometer());\n    this.setState({ isLoading: false });\n    const maxGameLength = 4;\n    if (toRender === maxGameLength) {\n      history.push('/feedback');\n    }\n  };\n\n  scoreCount = () => {\n    const { game, dispatch } = this.props;\n    const { timer, toRender } = this.state;\n    const hard = 3;\n    const firstPoints = 10;\n    let difficulty = 0;\n    switch (game[toRender].difficulty) {\n    case 'easy':\n      difficulty = 1;\n      break;\n    case 'medium':\n      difficulty = 2;\n      break;\n    case 'hard':\n      difficulty = hard;\n      break;\n    default:\n      break;\n    }\n    const points = firstPoints + (timer * difficulty);\n    dispatch(scoreAction(points));\n  };\n\n  render() {\n    const {\n      game,\n      /*       score, */\n    } = this.props;\n    const {\n      answers,\n      btnNext,\n      isBtnDisabled,\n      isLoading,\n      timer,\n      toRender,\n    } = this.state;\n    return (\n      <div>\n        <Header />\n        {!isLoading ? (\n          <div>\n            <p\n              data-testid=\"question-category\"\n            >\n              {game[toRender].category}\n\n            </p>\n            <p\n              data-testid=\"question-text\"\n            >\n              {game[toRender].question}\n\n            </p>\n            <div\n              data-testid=\"answer-options\"\n            >\n              {answers.map((option, index) => (\n                <button\n                  disabled={ isBtnDisabled }\n                  onClick={ this.colorTheAnswerBtn }\n                  className={ `${game[toRender].correct_answer === option\n                    ? rightAnswer\n                    : 'wrong-answer'\n                  }` }\n                  type=\"button\"\n                  key={ option }\n                  data-testid={ game[toRender].correct_answer === option\n                    ? rightAnswer : `wrong-answer-${index}` }\n                >\n                  {option}\n\n                </button>\n              ))}\n            </div>\n            {\n              btnNext\n                ? (\n                  <button\n                    type=\"button\"\n                    data-testid=\"btn-next\"\n                    onClick={ this.handleNextClick }\n                  >\n                    next\n                  </button>\n                )\n                : null\n            }\n            <span>\n              {timer === magicNumberTimer ? 0 : timer}\n            </span>\n          </div>\n        ) : null }\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  game: PropTypes.instanceOf(Array).isRequired,\n  // score: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  game: state.game.results,\n  email: state.player.gravatarEmail,\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Game);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}