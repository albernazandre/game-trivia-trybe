{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trivia-react-redux/src/Pages/Login.js\";\n// Pagina de Login\n\n// Aqui temos:\n// Funcao que realiza mudanças no estado inicial passado (handleChange)\n// handleChange tambem reconhece se a funcao validation do botao play retorna true\n// Requisicao de API do token que permite fazermos as requisicoes de perguntas que serao respondidas no jogo\n// localStorage que armazenar o token gerado\n// Funcao que cria o jogo a partir do momento que o token existe na localstorage, funcao mountGame\n// Funcao async handleClick que faz com que apos o clique no botao, dispare a acao de login apos funcao validation\n// Funcao validation que valida se email e nome correspondem às especificões e assim valida-se o login\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loginAction } from '../redux/actions';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: '',\n      name: '',\n      disabled: true\n    };\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      }, () => {\n        if (this.validation()) {\n          this.setState({\n            disabled: false\n          });\n        } else {\n          this.setState({\n            disabled: true\n          });\n        }\n      });\n    };\n    this.fetchToken = async () => {\n      const firstFetch = await fetch('https://opentdb.com/api_token.php?command=request');\n      const token = await firstFetch.json();\n      return token.token;\n    };\n    this.mountGame = async () => {\n      const {\n        history\n      } = this.props;\n      const localStorageToken = localStorage.getItem('token');\n      if (localStorageToken) {\n        history.push('/game');\n      } else {\n        const token = await this.fetchToken();\n        localStorage.setItem('token', token);\n        history.push('/game');\n      }\n    };\n    this.handleClick = async () => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(loginAction(this.state));\n      this.mountGame();\n    };\n    this.validation = () => {\n      const {\n        email,\n        name\n      } = this.state;\n      const magicNumber = 1;\n      const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n      const returnRegex = regex.test(email);\n      const returnPass = name.length >= magicNumber;\n      return !!(returnPass && returnRegex);\n    };\n  }\n  render() {\n    const {\n      email,\n      name,\n      disabled\n    } = this.state;\n    const {\n      history\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginPage\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: [\"Nome\", ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputLogin\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  id: \"name\",\n                  name: \"name\",\n                  placeholder: \"Insira seu nome...\",\n                  value: name,\n                  type: \"text\",\n                  \"data-testid\": \"input-player-name\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: [\"Email\", ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputLogin\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  id: \"email\",\n                  name: \"email\",\n                  placeholder: \"Insira seu e-mail...\",\n                  value: email,\n                  type: \"email\",\n                  \"data-testid\": \"input-gravatar-email\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: disabled,\n            className: \"btn btn-primary loginBtn\",\n            type: \"button\",\n            \"data-testid\": \"btn-play\",\n            onClick: this.handleClick,\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary loginBtn\",\n            type: \"button\",\n            \"data-testid\": \"btn-settings\",\n            onClick: () => history.push('/setting'),\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => ({\n  ...state.player\n});\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"names":["React","Component","connect","PropTypes","loginAction","Login","state","email","name","disabled","handleChange","target","value","setState","validation","fetchToken","firstFetch","fetch","token","json","mountGame","history","props","localStorageToken","localStorage","getItem","push","setItem","handleClick","dispatch","magicNumber","regex","returnRegex","test","returnPass","length","render","mapStateToProps","player","propTypes","shape","func","isRequired"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trivia-react-redux/src/Pages/Login.js"],"sourcesContent":["// Pagina de Login\n\n// Aqui temos:\n// Funcao que realiza mudanças no estado inicial passado (handleChange)\n// handleChange tambem reconhece se a funcao validation do botao play retorna true\n// Requisicao de API do token que permite fazermos as requisicoes de perguntas que serao respondidas no jogo\n// localStorage que armazenar o token gerado\n// Funcao que cria o jogo a partir do momento que o token existe na localstorage, funcao mountGame\n// Funcao async handleClick que faz com que apos o clique no botao, dispare a acao de login apos funcao validation\n// Funcao validation que valida se email e nome correspondem às especificões e assim valida-se o login\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loginAction } from '../redux/actions';\nimport '../style.css';\n\nclass Login extends Component {\n  state = {\n    email: '',\n    name: '',\n    disabled: true,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value }, () => {\n      if (this.validation()) {\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ disabled: true });\n      }\n    });\n  };\n\n  fetchToken = async () => {\n    const firstFetch = await fetch('https://opentdb.com/api_token.php?command=request');\n    const token = await firstFetch.json();\n    return token.token;\n  };\n\n  mountGame = async () => {\n    const { history } = this.props;\n    const localStorageToken = localStorage.getItem('token');\n    if (localStorageToken) {\n      history.push('/game');\n    } else {\n      const token = await this.fetchToken();\n      localStorage.setItem('token', token);\n      history.push('/game');\n    }\n  };\n\n  handleClick = async () => {\n    const { dispatch } = this.props;\n    dispatch(loginAction(this.state));\n    this.mountGame();\n  };\n\n  validation = () => {\n    const { email, name } = this.state;\n    const magicNumber = 1;\n    const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n    const returnRegex = regex.test(email);\n    const returnPass = name.length >= magicNumber;\n    return !!(returnPass && returnRegex);\n  };\n\n  render() {\n    const { email, name, disabled } = this.state;\n    const { history } = this.props;\n    return (\n      <div className=\"loginPage\">\n        <form>\n          <div className=\"flex\">\n            <div className=\"label\">\n              <label htmlFor=\"name\">\n                Nome\n                {' '}\n                <div\n                  className=\"inputLogin\"\n                >\n                  <input\n                    className=\"form-control\"\n                    id=\"name\"\n                    name=\"name\"\n                    placeholder=\"Insira seu nome...\"\n                    value={ name }\n                    type=\"text\"\n                    data-testid=\"input-player-name\"\n                    onChange={ this.handleChange }\n                  />\n                </div>\n              </label>\n            </div>\n            <div className=\"label\">\n              <label htmlFor=\"email\">\n                Email\n                {' '}\n                <div className=\"inputLogin\">\n                  <input\n                    className=\"form-control\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Insira seu e-mail...\"\n                    value={ email }\n                    type=\"email\"\n                    data-testid=\"input-gravatar-email\"\n                    onChange={ this.handleChange }\n                  />\n\n                </div>\n              </label>\n            </div>\n            <button\n              disabled={ disabled }\n              className=\"btn btn-primary loginBtn\"\n              type=\"button\"\n              data-testid=\"btn-play\"\n              onClick={ this.handleClick }\n            >\n              Play\n\n            </button>\n            <button\n              className=\"btn btn-primary loginBtn\"\n              type=\"button\"\n              data-testid=\"btn-settings\"\n              onClick={ () => history.push('/setting') }\n            >\n              Settings\n\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state.player,\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps)(Login);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}