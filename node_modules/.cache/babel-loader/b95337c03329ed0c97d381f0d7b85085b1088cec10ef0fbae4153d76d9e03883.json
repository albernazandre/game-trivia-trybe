{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trivia-react-redux/src/Pages/Feedback.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../Components/Header';\nimport { playAgainAction } from '../redux/actions';\nimport RankingButton from '../Components/RankingButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst magicNumber = 3;\nclass Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.selectionSortDesc = array => {\n      for (let i = 0; i < array.length - 1; i += 1) {\n        let maxIndex = i;\n        for (let j = i + 1; j < array.length; j += 1) {\n          if (array[j].score > array[maxIndex].score) {\n            maxIndex = j;\n          }\n        }\n        if (maxIndex !== i) {\n          [array[i], array[maxIndex]] = [array[maxIndex], array[i]];\n        }\n      }\n      return array;\n    };\n    this.handleClick = () => {\n      const {\n        history,\n        dispatch\n      } = this.props;\n      dispatch(playAgainAction());\n      history.push('/');\n    };\n  }\n  componentDidMount() {\n    const {\n      gravatarImage,\n      name,\n      score\n    } = this.props;\n    const rankScore = {\n      gravatarImage,\n      name,\n      score\n    };\n    let ranking = JSON.parse(localStorage.getItem('ranking'));\n    if (ranking) {\n      ranking = [...ranking, rankScore];\n      const ordenatedRanking = this.selectionSortDesc(ranking);\n      const top3 = ordenatedRanking.slice(0, magicNumber);\n      localStorage.setItem('ranking', JSON.stringify(top3));\n    } else {\n      localStorage.setItem('ranking', JSON.stringify([rankScore]));\n    }\n  }\n  render() {\n    const {\n      assertions,\n      score,\n      history\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"feedback-total-score\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"feedback-total-question\",\n        children: assertions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"feedback-text\",\n        children: assertions >= magicNumber ? 'Well Done!' : 'Could be better...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"btn-play-again\",\n        onClick: this.handleClick,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RankingButton, {\n        onClick: () => history.push('/ranking')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => ({\n  ...state.player\n});\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarImage: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"names":["React","Component","connect","PropTypes","Header","playAgainAction","RankingButton","magicNumber","Feedback","selectionSortDesc","array","i","length","maxIndex","j","score","handleClick","history","dispatch","props","push","componentDidMount","gravatarImage","name","rankScore","ranking","JSON","parse","localStorage","getItem","ordenatedRanking","top3","slice","setItem","stringify","render","assertions","mapStateToProps","state","player","propTypes","shape","func","isRequired","number","string"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trivia-react-redux/src/Pages/Feedback.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../Components/Header';\nimport { playAgainAction } from '../redux/actions';\nimport RankingButton from '../Components/RankingButton';\n\nconst magicNumber = 3;\n\nclass Feedback extends Component {\n  componentDidMount() {\n    const { gravatarImage, name, score } = this.props;\n    const rankScore = {\n      gravatarImage,\n      name,\n      score,\n    };\n    let ranking = JSON.parse(localStorage.getItem('ranking'));\n    if (ranking) {\n      ranking = [...ranking, rankScore];\n      const ordenatedRanking = this.selectionSortDesc(ranking);\n      const top3 = ordenatedRanking.slice(0, magicNumber);\n      localStorage.setItem('ranking', JSON.stringify(top3));\n    } else {\n      localStorage.setItem('ranking', JSON.stringify([rankScore]));\n    }\n  }\n\n  selectionSortDesc = (array) => {\n    for (let i = 0; i < array.length - 1; i += 1) {\n      let maxIndex = i;\n      for (let j = i + 1; j < array.length; j += 1) {\n        if (array[j].score > array[maxIndex].score) {\n          maxIndex = j;\n        }\n      }\n      if (maxIndex !== i) {\n        [array[i], array[maxIndex]] = [array[maxIndex], array[i]];\n      }\n    }\n    return array;\n  };\n\n  handleClick = () => {\n    const { history, dispatch } = this.props;\n    dispatch(playAgainAction());\n    history.push('/');\n  };\n\n  render() {\n    const { assertions, score, history } = this.props;\n    return (\n      <div>\n        <Header />\n        <p\n          data-testid=\"feedback-total-score\"\n        >\n          {score}\n        </p>\n        <p\n          data-testid=\"feedback-total-question\"\n        >\n          {assertions}\n        </p>\n        <p\n          data-testid=\"feedback-text\"\n        >\n          {assertions >= magicNumber ? 'Well Done!' : 'Could be better...'}\n        </p>\n        <button\n          type=\"button\"\n          data-testid=\"btn-play-again\"\n          onClick={ this.handleClick }\n        >\n          Play Again\n\n        </button>\n        <RankingButton onClick={ () => history.push('/ranking') } />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state.player,\n});\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarImage: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps)(Feedback);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}