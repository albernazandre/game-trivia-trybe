{"ast":null,"code":"import _toConsumableArray from\"/home/andre/Documentos/Andre/Documentos/projetos-autonomos/Repositorios/repositorios-projetos-isolados/game-trivia-trybe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/home/andre/Documentos/Andre/Documentos/projetos-autonomos/Repositorios/repositorios-projetos-isolados/game-trivia-trybe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/andre/Documentos/Andre/Documentos/projetos-autonomos/Repositorios/repositorios-projetos-isolados/game-trivia-trybe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/home/andre/Documentos/Andre/Documentos/projetos-autonomos/Repositorios/repositorios-projetos-isolados/game-trivia-trybe/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/andre/Documentos/Andre/Documentos/projetos-autonomos/Repositorios/repositorios-projetos-isolados/game-trivia-trybe/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/andre/Documentos/Andre/Documentos/projetos-autonomos/Repositorios/repositorios-projetos-isolados/game-trivia-trybe/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/andre/Documentos/Andre/Documentos/projetos-autonomos/Repositorios/repositorios-projetos-isolados/game-trivia-trybe/node_modules/@babel/runtime/helpers/esm/createSuper.js\";// Page com o GAME propriamente dito\n// componentDidMount faz com que depois do render se cheque se há o token para montar o game e lança o cronometro de 30 segundos\n// A requisicao fetchGame utiliza o token requisitado e gerado apos o login e retorna um jogo de perguntas\n// A funcao async checkTokenToMountGame ira checar se o token expirou (ele expira em 6 horas), caso expirado faz o logOut e volta para page inicial de login\n// A funcao answerToShow retorna as opcoes de respostas para uma determinada pergunta, a funcao captura as respostas certas e erradas do objeto retornado pela API\n// mathRandom na funcao answerToShow embaralha as alternativas (opcoes de resposta)\n// A funcao componentDidUpdate verifica se ha perguntas e retorna funcao answerToShow caso haja, e se o time chegar a zero passa para a proxima e limpa o cronometro\n// A funcao cronometer ira fazer com que os 30 segundos diminuam de um em um\n// A funcao colorTheAnswerBtn ira colorir ou de verde ou de vermelho a depender se a resposta esta certa ou errada, e ainda ira habilitar o botao de next para a proxima pergunta\n// A funcao handleNextClick ira setar o novo estado do game apos responder uma questao, caso tenhamos todas as perguntas respondidas, ele vai para page de feedback\n// A funcao scoreCount realiza a contagem de pontos que depeende do nivel de dificuldade das questoes e do tempo que faltava para responder\nimport React,{Component}from'react';import{connect}from'react-redux';import Header from'../Components/Header';import{saveGame,logOut,scoreAction}from'../redux/actions';import RankingButton from'../Components/RankingButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var magicNumberTimer=-1;var rightAnswer='correct-answer';var Game=/*#__PURE__*/function(_Component){_inherits(Game,_Component);var _super=_createSuper(Game);function Game(){var _this;_classCallCheck(this,Game);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={answers:[],btnNext:false,isLoading:true,isBtnDisabled:false,timer:30,toRender:0};_this.fetchGame=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(token){var secondFetch,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://opentdb.com/api.php?amount=5&token=\".concat(token));case 2:secondFetch=_context.sent;_context.next=5;return secondFetch.json();case 5:response=_context.sent;return _context.abrupt(\"return\",response);case 7:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.checkTokenToMountGame=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _this$props,history,dispatch,magicNumber,localStorageToken,fetchedGame;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_this$props=_this.props,history=_this$props.history,dispatch=_this$props.dispatch;magicNumber=3;localStorageToken=localStorage.getItem('token');_context2.next=5;return _this.fetchGame(localStorageToken);case 5:fetchedGame=_context2.sent;if(fetchedGame.response_code===magicNumber){localStorage.removeItem('token');dispatch(logOut());history.push('/');}else{dispatch(saveGame(fetchedGame));}_this.setState({isLoading:false},function(){return _this.answersToShow();});case 8:case\"end\":return _context2.stop();}},_callee2);}));_this.answersToShow=function(){var toRender=_this.state.toRender;var game=_this.props.game;var rightOption=game[toRender].correct_answer;var wrongAnswer=game[toRender].incorrect_answers;var options=[rightOption].concat(_toConsumableArray(wrongAnswer));for(var i=options.length-1;i>0;i-=1){var j=Math.floor(Math.random()*(i+1));var _ref3=[options[j],options[i]];options[i]=_ref3[0];options[j]=_ref3[1];}_this.setState({answers:options});};_this.chronometer=function(){var magicNumber=1000;_this.timerId=setInterval(function(){_this.setState(function(prevState){return{timer:prevState.timer-1};});},magicNumber);};_this.colorTheAnswerBtn=function(_ref4){var target=_ref4.target;clearInterval(_this.timerId);var correctBtn=document.querySelector(\".\".concat(rightAnswer));var wrongBtn=document.querySelectorAll('.wrong-answer');correctBtn.style.border='3px solid rgb(6, 240, 15)';wrongBtn.forEach(function(btn){btn.style.border='3px solid red';});_this.setState({btnNext:true});if(target.className===rightAnswer){_this.scoreCount();}};_this.handleNextClick=function(){var history=_this.props.history;var toRender=_this.state.toRender;_this.setState(function(prevState){return{toRender:prevState.toRender+1,answers:[],btnNext:false,isLoading:true,isBtnDisabled:false,timer:30};},function(){return _this.chronometer();});_this.setState({isLoading:false});var maxGameLength=4;if(toRender===maxGameLength){history.push('/feedback');}};_this.scoreCount=function(){var _this$props2=_this.props,game=_this$props2.game,dispatch=_this$props2.dispatch;var _this$state=_this.state,timer=_this$state.timer,toRender=_this$state.toRender;var hard=3;var firstPoints=10;var difficulty=0;switch(game[toRender].difficulty){case'easy':difficulty=1;break;case'medium':difficulty=2;break;case'hard':difficulty=hard;break;default:break;}var points=firstPoints+timer*difficulty;dispatch(scoreAction(points));};return _this;}_createClass(Game,[{key:\"componentDidMount\",value:function componentDidMount(){this.checkTokenToMountGame();this.chronometer();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(_,prevState){var game=this.props.game;var _this$state2=this.state,toRender=_this$state2.toRender,timer=_this$state2.timer;if(game.length&&prevState.toRender!==toRender){this.answersToShow();}if(timer===0){clearInterval(this.timerId);this.setState({btnNext:true,isBtnDisabled:true,timer:-1});}}},{key:\"render\",value:function render(){var _this2=this;var _this$props3=this.props,game=_this$props3.game,history=_this$props3.history;var _this$state3=this.state,answers=_this$state3.answers,btnNext=_this$state3.btnNext,isBtnDisabled=_this$state3.isBtnDisabled,isLoading=_this$state3.isLoading,timer=_this$state3.timer,toRender=_this$state3.toRender;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),!isLoading?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{\"data-testid\":\"question-category\",children:game[toRender].category}),/*#__PURE__*/_jsx(\"p\",{\"data-testid\":\"question-text\",children:game[toRender].question}),/*#__PURE__*/_jsx(\"div\",{\"data-testid\":\"answer-options\",children:answers.map(function(option,index){return/*#__PURE__*/_jsx(\"button\",{disabled:isBtnDisabled,onClick:_this2.colorTheAnswerBtn,className:\"\".concat(game[toRender].correct_answer===option?rightAnswer:'wrong-answer'),type:\"button\",\"data-testid\":game[toRender].correct_answer===option?rightAnswer:\"wrong-answer-\".concat(index),children:option},option);})}),btnNext?/*#__PURE__*/_jsx(\"button\",{type:\"button\",\"data-testid\":\"btn-next\",onClick:this.handleNextClick,children:\"next\"}):null,/*#__PURE__*/_jsx(\"span\",{children:timer===magicNumberTimer?0:timer}),/*#__PURE__*/_jsx(RankingButton,{onClick:function onClick(){return history.push('/ranking');}})]}):null]});}}]);return Game;}(Component);var mapStateToProps=function mapStateToProps(state){return{game:state.game.results,email:state.player.gravatarEmail,score:state.player.score};};export default connect(mapStateToProps)(Game);","map":{"version":3,"names":["React","Component","connect","Header","saveGame","logOut","scoreAction","RankingButton","magicNumberTimer","rightAnswer","Game","state","answers","btnNext","isLoading","isBtnDisabled","timer","toRender","fetchGame","token","fetch","secondFetch","json","response","checkTokenToMountGame","props","history","dispatch","magicNumber","localStorageToken","localStorage","getItem","fetchedGame","response_code","removeItem","push","setState","answersToShow","game","rightOption","correct_answer","wrongAnswer","incorrect_answers","options","i","length","j","Math","floor","random","chronometer","timerId","setInterval","prevState","colorTheAnswerBtn","target","clearInterval","correctBtn","document","querySelector","wrongBtn","querySelectorAll","style","border","forEach","btn","className","scoreCount","handleNextClick","maxGameLength","hard","firstPoints","difficulty","points","_","category","question","map","option","index","mapStateToProps","results","email","player","gravatarEmail","score"],"sources":["/home/andre/Documentos/Andre/Documentos/projetos-autonomos/Repositorios/repositorios-projetos-isolados/game-trivia-trybe/src/Pages/Game.js"],"sourcesContent":["// Page com o GAME propriamente dito\n\n// componentDidMount faz com que depois do render se cheque se há o token para montar o game e lança o cronometro de 30 segundos\n// A requisicao fetchGame utiliza o token requisitado e gerado apos o login e retorna um jogo de perguntas\n// A funcao async checkTokenToMountGame ira checar se o token expirou (ele expira em 6 horas), caso expirado faz o logOut e volta para page inicial de login\n// A funcao answerToShow retorna as opcoes de respostas para uma determinada pergunta, a funcao captura as respostas certas e erradas do objeto retornado pela API\n// mathRandom na funcao answerToShow embaralha as alternativas (opcoes de resposta)\n// A funcao componentDidUpdate verifica se ha perguntas e retorna funcao answerToShow caso haja, e se o time chegar a zero passa para a proxima e limpa o cronometro\n// A funcao cronometer ira fazer com que os 30 segundos diminuam de um em um\n// A funcao colorTheAnswerBtn ira colorir ou de verde ou de vermelho a depender se a resposta esta certa ou errada, e ainda ira habilitar o botao de next para a proxima pergunta\n// A funcao handleNextClick ira setar o novo estado do game apos responder uma questao, caso tenhamos todas as perguntas respondidas, ele vai para page de feedback\n// A funcao scoreCount realiza a contagem de pontos que depeende do nivel de dificuldade das questoes e do tempo que faltava para responder\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../Components/Header';\nimport { saveGame, logOut, scoreAction } from '../redux/actions';\nimport RankingButton from '../Components/RankingButton';\n\nconst magicNumberTimer = -1;\nconst rightAnswer = 'correct-answer';\n\nclass Game extends Component {\n  state = {\n    answers: [],\n    btnNext: false,\n    isLoading: true,\n    isBtnDisabled: false,\n    timer: 30,\n    toRender: 0,\n  };\n\n  componentDidMount() {\n    this.checkTokenToMountGame();\n    this.chronometer();\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { game } = this.props;\n    const { toRender, timer } = this.state;\n    if (game.length && (prevState.toRender !== toRender)) {\n      this.answersToShow();\n    }\n    if (timer === 0) {\n      clearInterval(this.timerId);\n      this.setState({\n        btnNext: true,\n        isBtnDisabled: true,\n        timer: -1,\n      });\n    }\n  }\n\n  fetchGame = async (token) => {\n    const secondFetch = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const response = await secondFetch.json();\n    return response;\n  };\n\n  checkTokenToMountGame = async () => {\n    const { history, dispatch } = this.props;\n    const magicNumber = 3;\n    const localStorageToken = localStorage.getItem('token');\n    const fetchedGame = await this.fetchGame(localStorageToken);\n    if (fetchedGame.response_code === magicNumber) {\n      localStorage.removeItem('token');\n      dispatch(logOut());\n      history.push('/');\n    } else {\n      dispatch(saveGame(fetchedGame));\n    }\n    this.setState({ isLoading: false }, () => this.answersToShow());\n  };\n\n  answersToShow = () => {\n    const { toRender } = this.state;\n    const { game } = this.props;\n    const rightOption = game[toRender].correct_answer;\n    const wrongAnswer = game[toRender].incorrect_answers;\n    const options = [rightOption, ...wrongAnswer];\n    for (let i = options.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [options[i], options[j]] = [options[j], options[i]];\n    }\n    this.setState({\n      answers: options,\n    });\n  };\n\n  chronometer = () => {\n    const magicNumber = 1000;\n    this.timerId = setInterval(() => {\n      this.setState((prevState) => ({\n        timer: prevState.timer - 1,\n      }));\n    }, magicNumber);\n  };\n\n  colorTheAnswerBtn = ({ target }) => {\n    clearInterval(this.timerId);\n    const correctBtn = document.querySelector(`.${rightAnswer}`);\n    const wrongBtn = document.querySelectorAll('.wrong-answer');\n    correctBtn.style.border = '3px solid rgb(6, 240, 15)';\n    wrongBtn.forEach((btn) => {\n      btn.style.border = '3px solid red';\n    });\n    this.setState({\n      btnNext: true,\n    });\n    if (target.className === rightAnswer) {\n      this.scoreCount();\n    }\n  };\n\n  handleNextClick = () => {\n    const { history } = this.props;\n    const { toRender } = this.state;\n    this.setState((prevState) => ({\n      toRender: prevState.toRender + 1,\n      answers: [],\n      btnNext: false,\n      isLoading: true,\n      isBtnDisabled: false,\n      timer: 30,\n    }), () => this.chronometer());\n    this.setState({ isLoading: false });\n    const maxGameLength = 4;\n    if (toRender === maxGameLength) {\n      history.push('/feedback');\n    }\n  };\n\n  scoreCount = () => {\n    const { game, dispatch } = this.props;\n    const { timer, toRender } = this.state;\n    const hard = 3;\n    const firstPoints = 10;\n    let difficulty = 0;\n    switch (game[toRender].difficulty) {\n    case 'easy':\n      difficulty = 1;\n      break;\n    case 'medium':\n      difficulty = 2;\n      break;\n    case 'hard':\n      difficulty = hard;\n      break;\n    default:\n      break;\n    }\n    const points = firstPoints + (timer * difficulty);\n    dispatch(scoreAction(points));\n  };\n\n  render() {\n    const {\n      game,\n      history,\n      /*       score, */\n    } = this.props;\n    const {\n      answers,\n      btnNext,\n      isBtnDisabled,\n      isLoading,\n      timer,\n      toRender,\n    } = this.state;\n    return (\n      <div>\n        <Header />\n        {!isLoading ? (\n          <div>\n            <p\n              data-testid=\"question-category\"\n            >\n              {game[toRender].category}\n\n            </p>\n            <p\n              data-testid=\"question-text\"\n            >\n              {game[toRender].question}\n\n            </p>\n            <div\n              data-testid=\"answer-options\"\n            >\n              {answers.map((option, index) => (\n                <button\n                  disabled={ isBtnDisabled }\n                  onClick={ this.colorTheAnswerBtn }\n                  className={ `${game[toRender].correct_answer === option\n                    ? rightAnswer\n                    : 'wrong-answer'\n                  }` }\n                  type=\"button\"\n                  key={ option }\n                  data-testid={ game[toRender].correct_answer === option\n                    ? rightAnswer : `wrong-answer-${index}` }\n                >\n                  {option}\n\n                </button>\n              ))}\n            </div>\n            {\n              btnNext\n                ? (\n                  <button\n                    type=\"button\"\n                    data-testid=\"btn-next\"\n                    onClick={ this.handleNextClick }\n                  >\n                    next\n                  </button>\n                )\n                : null\n            }\n            <span>\n              {timer === magicNumberTimer ? 0 : timer}\n            </span>\n            <RankingButton onClick={ () => history.push('/ranking') } />\n          </div>\n        ) : null }\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  game: PropTypes.instanceOf(Array).isRequired,\n  // score: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  game: state.game.results,\n  email: state.player.gravatarEmail,\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Game);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}