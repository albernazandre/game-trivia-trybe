{"ast":null,"code":"import { LOGIN_ACTION, LOGOUT, SCORE_ACTION, PLAY_AGAIN_ACTION } from '../actions';\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: ''\n};\nconst player = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOGIN_ACTION:\n      return {\n        ...state,\n        name: action.payload.name,\n        gravatarEmail: action.payload.email,\n        score: 0\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        name: '',\n        gravatarEmail: '',\n        score: 0\n      };\n    case SCORE_ACTION:\n      return {\n        ...state,\n        score: state.score + action.payload,\n        assertions: state.assertions + 1\n      };\n    case PLAY_AGAIN_ACTION:\n      return {\n        name: '',\n        assertions: 0,\n        score: 0,\n        gravatarEmail: ''\n      };\n    default:\n      return state;\n  }\n};\nexport default player;","map":{"version":3,"names":["LOGIN_ACTION","LOGOUT","SCORE_ACTION","PLAY_AGAIN_ACTION","INITIAL_STATE","name","assertions","score","gravatarEmail","player","state","action","type","payload","email"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trivia-react-redux/src/redux/reducer/player.js"],"sourcesContent":["import { LOGIN_ACTION, LOGOUT, SCORE_ACTION, PLAY_AGAIN_ACTION } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case LOGIN_ACTION:\n    return {\n      ...state,\n      name: action.payload.name,\n      gravatarEmail: action.payload.email,\n      score: 0,\n    };\n  case LOGOUT:\n    return {\n      ...state,\n      name: '',\n      gravatarEmail: '',\n      score: 0,\n    };\n  case SCORE_ACTION:\n    return {\n      ...state,\n      score: state.score + action.payload,\n      assertions: state.assertions + 1,\n    };\n  case PLAY_AGAIN_ACTION:\n    return {\n      name: '',\n      assertions: 0,\n      score: 0,\n      gravatarEmail: '',\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default player;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,MAAM,EAAEC,YAAY,EAAEC,iBAAiB,QAAQ,YAAY;AAElF,MAAMC,aAAa,GAAG;EACpBC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAK,uEAAGN,aAAa;EAAA,IAAEO,MAAM;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACnB,KAAKZ,YAAY;MACf,OAAO;QACL,GAAGU,KAAK;QACRL,IAAI,EAAEM,MAAM,CAACE,OAAO,CAACR,IAAI;QACzBG,aAAa,EAAEG,MAAM,CAACE,OAAO,CAACC,KAAK;QACnCP,KAAK,EAAE;MACT,CAAC;IACH,KAAKN,MAAM;MACT,OAAO;QACL,GAAGS,KAAK;QACRL,IAAI,EAAE,EAAE;QACRG,aAAa,EAAE,EAAE;QACjBD,KAAK,EAAE;MACT,CAAC;IACH,KAAKL,YAAY;MACf,OAAO;QACL,GAAGQ,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACE,OAAO;QACnCP,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;MACjC,CAAC;IACH,KAAKH,iBAAiB;MACpB,OAAO;QACLE,IAAI,EAAE,EAAE;QACRC,UAAU,EAAE,CAAC;QACbC,KAAK,EAAE,CAAC;QACRC,aAAa,EAAE;MACjB,CAAC;IAEH;MACE,OAAOE,KAAK;EAAC;AAEjB,CAAC;AAED,eAAeD,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}