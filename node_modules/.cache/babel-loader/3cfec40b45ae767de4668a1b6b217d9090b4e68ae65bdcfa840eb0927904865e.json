{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trivia-react-redux/src/Pages/Game.js\";\n// Page com o GAME propriamente dito\n\n// componentDidMount checa se há o token para montar o game\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../Components/Header';\nimport { saveGame, logOut } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Game extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      toRender: 0,\n      isLoading: true\n    };\n    this.fetchGame = async token => {\n      const secondFetch = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n      const response = await secondFetch.json();\n      return response;\n    };\n    this.checkTokenToMountGame = async () => {\n      const {\n        history,\n        dispatch\n      } = this.props;\n      const magicNumber = 3;\n      const localStorageToken = localStorage.getItem('token');\n      const fetchedGame = await this.fetchGame(localStorageToken);\n      if (fetchedGame.response_code === magicNumber) {\n        localStorage.removeItem('token');\n        dispatch(logOut());\n        history.push('/');\n      } else {\n        dispatch(saveGame(fetchedGame));\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n    this.answersToShow = () => {\n      const {\n        toRender\n      } = this.state;\n      const {\n        game\n      } = this.props;\n      const rightOption = game[toRender].correct_answer;\n      const wrongAnswer = game[toRender].incorrect_answers;\n      const options = [rightOption, ...wrongAnswer];\n      for (let i = options.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [options[i], options[j]] = [options[j], options[i]];\n      }\n      return options;\n    };\n  }\n  componentDidMount() {\n    this.checkTokenToMountGame();\n  }\n  render() {\n    const {\n      game\n    } = this.props;\n    const {\n      toRender,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"question-category\",\n          children: game[0].category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"question-text\",\n          children: game[0].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"answer-options\",\n          children: this.answersToShow().map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            \"data-testid\": game[toRender].correct_answer === option ? 'correct-answer' : `wrong-answer-${index}`,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n}\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  game: PropTypes.instanceOf(Array).isRequired\n};\nconst mapStateToProps = state => ({\n  game: state.game.results,\n  email: state.player.gravatarEmail\n});\nexport default connect(mapStateToProps)(Game);","map":{"version":3,"names":["React","Component","connect","PropTypes","Header","saveGame","logOut","Game","state","toRender","isLoading","fetchGame","token","secondFetch","fetch","response","json","checkTokenToMountGame","history","dispatch","props","magicNumber","localStorageToken","localStorage","getItem","fetchedGame","response_code","removeItem","push","setState","answersToShow","game","rightOption","correct_answer","wrongAnswer","incorrect_answers","options","i","length","j","Math","floor","random","componentDidMount","render","category","question","map","option","index","propTypes","shape","func","isRequired","instanceOf","Array","mapStateToProps","results","email","player","gravatarEmail"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trivia-react-redux/src/Pages/Game.js"],"sourcesContent":["// Page com o GAME propriamente dito\n\n// componentDidMount checa se há o token para montar o game\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../Components/Header';\nimport { saveGame, logOut } from '../redux/actions';\n\nclass Game extends Component {\n  state = {\n    toRender: 0,\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    this.checkTokenToMountGame();\n  }\n\n  fetchGame = async (token) => {\n    const secondFetch = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const response = await secondFetch.json();\n    return response;\n  };\n\n  checkTokenToMountGame = async () => {\n    const { history, dispatch } = this.props;\n    const magicNumber = 3;\n    const localStorageToken = localStorage.getItem('token');\n    const fetchedGame = await this.fetchGame(localStorageToken);\n    if (fetchedGame.response_code === magicNumber) {\n      localStorage.removeItem('token');\n      dispatch(logOut());\n      history.push('/');\n    } else {\n      dispatch(saveGame(fetchedGame));\n      this.setState({ isLoading: false });\n    }\n  };\n\n  answersToShow = () => {\n    const { toRender } = this.state;\n    const { game } = this.props;\n    const rightOption = game[toRender].correct_answer;\n    const wrongAnswer = game[toRender].incorrect_answers;\n    const options = [rightOption, ...wrongAnswer];\n    for (let i = options.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [options[i], options[j]] = [options[j], options[i]];\n    }\n    return options;\n  };\n\n  render() {\n    const { game } = this.props;\n    const { toRender, isLoading } = this.state;\n    return (\n      <div>\n        <Header />\n        {!isLoading ? (\n          <div>\n            <p\n              data-testid=\"question-category\"\n            >\n              {game[0].category}\n\n            </p>\n            <p\n              data-testid=\"question-text\"\n            >\n              {game[0].question}\n\n            </p>\n            <div\n              data-testid=\"answer-options\"\n            >\n              {this.answersToShow().map((option, index) => (\n                <button\n                  type=\"button\"\n                  key={ option }\n                  data-testid={ game[toRender].correct_answer === option\n                    ? 'correct-answer' : `wrong-answer-${index}` }\n                >\n                  {option}\n\n                </button>\n              ))}\n            </div>\n          </div>\n        ) : null }\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  game: PropTypes.instanceOf(Array).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  game: state.game.results,\n  email: state.player.gravatarEmail,\n});\n\nexport default connect(mapStateToProps)(Game);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}